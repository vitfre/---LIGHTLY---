
ignit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000704  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00000704  00000798  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800080  00800080  000007b8  2**0
                  ALLOC
  3 .stab         000006b4  00000000  00000000  000007b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00000e6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000020  00000000  00000000  00000ef1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000006c  00000000  00000000  00000f11  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000240  00000000  00000000  00000f7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000142  00000000  00000000  000011bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000501  00000000  00000000  000012ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000c0  00000000  00000000  00001800  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000000f9  00000000  00000000  000018c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 0000002b  00000000  00000000  000019b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	94 c2       	rjmp	.+1320   	; 0x52c <__vector_1>
   4:	25 c0       	rjmp	.+74     	; 0x50 <__bad_interrupt>
   6:	24 c0       	rjmp	.+72     	; 0x50 <__bad_interrupt>
   8:	65 c2       	rjmp	.+1226   	; 0x4d4 <__vector_4>
   a:	22 c0       	rjmp	.+68     	; 0x50 <__bad_interrupt>
   c:	21 c0       	rjmp	.+66     	; 0x50 <__bad_interrupt>
   e:	20 c0       	rjmp	.+64     	; 0x50 <__bad_interrupt>
  10:	71 c2       	rjmp	.+1250   	; 0x4f4 <__vector_8>
  12:	1e c0       	rjmp	.+60     	; 0x50 <__bad_interrupt>
  14:	1d c0       	rjmp	.+58     	; 0x50 <__bad_interrupt>
  16:	1c c0       	rjmp	.+56     	; 0x50 <__bad_interrupt>
  18:	1b c0       	rjmp	.+54     	; 0x50 <__bad_interrupt>
  1a:	1a c0       	rjmp	.+52     	; 0x50 <__bad_interrupt>
  1c:	19 c0       	rjmp	.+50     	; 0x50 <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf ed       	ldi	r28, 0xDF	; 223
  24:	cd bf       	out	0x3d, r28	; 61

00000026 <__do_copy_data>:
  26:	10 e0       	ldi	r17, 0x00	; 0
  28:	a0 e6       	ldi	r26, 0x60	; 96
  2a:	b0 e0       	ldi	r27, 0x00	; 0
  2c:	e4 e0       	ldi	r30, 0x04	; 4
  2e:	f7 e0       	ldi	r31, 0x07	; 7
  30:	02 c0       	rjmp	.+4      	; 0x36 <__CCP__+0x2>
  32:	05 90       	lpm	r0, Z+
  34:	0d 92       	st	X+, r0
  36:	a0 38       	cpi	r26, 0x80	; 128
  38:	b1 07       	cpc	r27, r17
  3a:	d9 f7       	brne	.-10     	; 0x32 <__do_copy_data+0xc>

0000003c <__do_clear_bss>:
  3c:	10 e0       	ldi	r17, 0x00	; 0
  3e:	a0 e8       	ldi	r26, 0x80	; 128
  40:	b0 e0       	ldi	r27, 0x00	; 0
  42:	01 c0       	rjmp	.+2      	; 0x46 <.do_clear_bss_start>

00000044 <.do_clear_bss_loop>:
  44:	1d 92       	st	X+, r1

00000046 <.do_clear_bss_start>:
  46:	a2 38       	cpi	r26, 0x82	; 130
  48:	b1 07       	cpc	r27, r17
  4a:	e1 f7       	brne	.-8      	; 0x44 <.do_clear_bss_loop>
  4c:	dc d2       	rcall	.+1464   	; 0x606 <main>
  4e:	58 c3       	rjmp	.+1712   	; 0x700 <_exit>

00000050 <__bad_interrupt>:
  50:	d7 cf       	rjmp	.-82     	; 0x0 <__vectors>

00000052 <pause>:
unsigned int samples[16]={0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,};
//****************************************************************************************
//Функция зазадержек
//****************************************************************************************
static void pause (unsigned long int i)
{
  52:	df 93       	push	r29
  54:	cf 93       	push	r28
  56:	cd b7       	in	r28, 0x3d	; 61
  58:	de b7       	in	r29, 0x3e	; 62
  5a:	c4 50       	subi	r28, 0x04	; 4
  5c:	cd bf       	out	0x3d, r28	; 61
  5e:	69 83       	std	Y+1, r22	; 0x01
  60:	7a 83       	std	Y+2, r23	; 0x02
  62:	8b 83       	std	Y+3, r24	; 0x03
  64:	9c 83       	std	Y+4, r25	; 0x04
	for (;i>0;i--)
  66:	0b c0       	rjmp	.+22     	; 0x7e <pause+0x2c>
  68:	89 81       	ldd	r24, Y+1	; 0x01
  6a:	9a 81       	ldd	r25, Y+2	; 0x02
  6c:	ab 81       	ldd	r26, Y+3	; 0x03
  6e:	bc 81       	ldd	r27, Y+4	; 0x04
  70:	01 97       	sbiw	r24, 0x01	; 1
  72:	a1 09       	sbc	r26, r1
  74:	b1 09       	sbc	r27, r1
  76:	89 83       	std	Y+1, r24	; 0x01
  78:	9a 83       	std	Y+2, r25	; 0x02
  7a:	ab 83       	std	Y+3, r26	; 0x03
  7c:	bc 83       	std	Y+4, r27	; 0x04
  7e:	89 81       	ldd	r24, Y+1	; 0x01
  80:	9a 81       	ldd	r25, Y+2	; 0x02
  82:	ab 81       	ldd	r26, Y+3	; 0x03
  84:	bc 81       	ldd	r27, Y+4	; 0x04
  86:	00 97       	sbiw	r24, 0x00	; 0
  88:	a1 05       	cpc	r26, r1
  8a:	b1 05       	cpc	r27, r1
  8c:	69 f7       	brne	.-38     	; 0x68 <pause+0x16>
	{
	};
};
  8e:	cc 5f       	subi	r28, 0xFC	; 252
  90:	cd bf       	out	0x3d, r28	; 61
  92:	cf 91       	pop	r28
  94:	df 91       	pop	r29
  96:	08 95       	ret

00000098 <read_adc>:
//****************************************************************************************
//Функция измерения напряжения
//****************************************************************************************
unsigned int read_adc(unsigned char adc_input)
{
  98:	df 93       	push	r29
  9a:	cf 93       	push	r28
  9c:	0f 92       	push	r0
  9e:	cd b7       	in	r28, 0x3d	; 61
  a0:	de b7       	in	r29, 0x3e	; 62
  a2:	89 83       	std	Y+1, r24	; 0x01
ADMUX=(adc_input & 0x0f) | ADC_VREF_TYPE;
  a4:	87 e2       	ldi	r24, 0x27	; 39
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	29 81       	ldd	r18, Y+1	; 0x01
  aa:	2f 70       	andi	r18, 0x0F	; 15
  ac:	20 69       	ori	r18, 0x90	; 144
  ae:	fc 01       	movw	r30, r24
  b0:	20 83       	st	Z, r18
// Delay needed for the stabilization of the ADC input voltage
pause(10);//delay_us(10);
  b2:	6a e0       	ldi	r22, 0x0A	; 10
  b4:	70 e0       	ldi	r23, 0x00	; 0
  b6:	80 e0       	ldi	r24, 0x00	; 0
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	cb df       	rcall	.-106    	; 0x52 <pause>
// Start the AD conversion
ADCSRA|=0x40;
  bc:	86 e2       	ldi	r24, 0x26	; 38
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	26 e2       	ldi	r18, 0x26	; 38
  c2:	30 e0       	ldi	r19, 0x00	; 0
  c4:	f9 01       	movw	r30, r18
  c6:	20 81       	ld	r18, Z
  c8:	20 64       	ori	r18, 0x40	; 64
  ca:	fc 01       	movw	r30, r24
  cc:	20 83       	st	Z, r18
// Wait for the AD conversion to complete
while ((ADCSRA & 0x10)==0);
  ce:	00 00       	nop
  d0:	86 e2       	ldi	r24, 0x26	; 38
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	fc 01       	movw	r30, r24
  d6:	80 81       	ld	r24, Z
  d8:	88 2f       	mov	r24, r24
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	80 71       	andi	r24, 0x10	; 16
  de:	90 70       	andi	r25, 0x00	; 0
  e0:	00 97       	sbiw	r24, 0x00	; 0
  e2:	b1 f3       	breq	.-20     	; 0xd0 <read_adc+0x38>
ADCSRA|=0x10;
  e4:	86 e2       	ldi	r24, 0x26	; 38
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	26 e2       	ldi	r18, 0x26	; 38
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	f9 01       	movw	r30, r18
  ee:	20 81       	ld	r18, Z
  f0:	20 61       	ori	r18, 0x10	; 16
  f2:	fc 01       	movw	r30, r24
  f4:	20 83       	st	Z, r18
return ADCW;
  f6:	84 e2       	ldi	r24, 0x24	; 36
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	fc 01       	movw	r30, r24
  fc:	80 81       	ld	r24, Z
  fe:	91 81       	ldd	r25, Z+1	; 0x01
};
 100:	0f 90       	pop	r0
 102:	cf 91       	pop	r28
 104:	df 91       	pop	r29
 106:	08 95       	ret

00000108 <filter>:
//****************************************************************************************
//Функция фильтра
//****************************************************************************************
unsigned int filter (unsigned int del)
{
 108:	df 93       	push	r29
 10a:	cf 93       	push	r28
 10c:	cd b7       	in	r28, 0x3d	; 61
 10e:	de b7       	in	r29, 0x3e	; 62
 110:	c7 50       	subi	r28, 0x07	; 7
 112:	cd bf       	out	0x3d, r28	; 61
 114:	9f 83       	std	Y+7, r25	; 0x07
 116:	8e 83       	std	Y+6, r24	; 0x06
signed char cnt = 0;
 118:	19 82       	std	Y+1, r1	; 0x01
unsigned long int sum = 0;
 11a:	1a 82       	std	Y+2, r1	; 0x02
 11c:	1b 82       	std	Y+3, r1	; 0x03
 11e:	1c 82       	std	Y+4, r1	; 0x04
 120:	1d 82       	std	Y+5, r1	; 0x05
	for(cnt = 1;cnt<=15;cnt++)
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	89 83       	std	Y+1, r24	; 0x01
 126:	1a c0       	rjmp	.+52     	; 0x15c <filter+0x54>
	{
		samples[cnt - 1] = samples[cnt];
 128:	89 81       	ldd	r24, Y+1	; 0x01
 12a:	99 27       	eor	r25, r25
 12c:	87 fd       	sbrc	r24, 7
 12e:	90 95       	com	r25
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	29 81       	ldd	r18, Y+1	; 0x01
 134:	33 27       	eor	r19, r19
 136:	27 fd       	sbrc	r18, 7
 138:	30 95       	com	r19
 13a:	22 0f       	add	r18, r18
 13c:	33 1f       	adc	r19, r19
 13e:	20 5a       	subi	r18, 0xA0	; 160
 140:	3f 4f       	sbci	r19, 0xFF	; 255
 142:	f9 01       	movw	r30, r18
 144:	20 81       	ld	r18, Z
 146:	31 81       	ldd	r19, Z+1	; 0x01
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	80 5a       	subi	r24, 0xA0	; 160
 14e:	9f 4f       	sbci	r25, 0xFF	; 255
 150:	fc 01       	movw	r30, r24
 152:	31 83       	std	Z+1, r19	; 0x01
 154:	20 83       	st	Z, r18
//****************************************************************************************
unsigned int filter (unsigned int del)
{
signed char cnt = 0;
unsigned long int sum = 0;
	for(cnt = 1;cnt<=15;cnt++)
 156:	89 81       	ldd	r24, Y+1	; 0x01
 158:	8f 5f       	subi	r24, 0xFF	; 255
 15a:	89 83       	std	Y+1, r24	; 0x01
 15c:	89 81       	ldd	r24, Y+1	; 0x01
 15e:	80 31       	cpi	r24, 0x10	; 16
 160:	1c f3       	brlt	.-58     	; 0x128 <filter+0x20>
	{
		samples[cnt - 1] = samples[cnt];
	};
	samples[15] = del;
 162:	8e 81       	ldd	r24, Y+6	; 0x06
 164:	9f 81       	ldd	r25, Y+7	; 0x07
 166:	90 93 7f 00 	sts	0x007F, r25
 16a:	80 93 7e 00 	sts	0x007E, r24
	for(cnt = 15;cnt>=0;cnt--)
 16e:	8f e0       	ldi	r24, 0x0F	; 15
 170:	89 83       	std	Y+1, r24	; 0x01
 172:	1d c0       	rjmp	.+58     	; 0x1ae <filter+0xa6>
	{
		sum = sum + samples[cnt];
 174:	89 81       	ldd	r24, Y+1	; 0x01
 176:	99 27       	eor	r25, r25
 178:	87 fd       	sbrc	r24, 7
 17a:	90 95       	com	r25
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	80 5a       	subi	r24, 0xA0	; 160
 182:	9f 4f       	sbci	r25, 0xFF	; 255
 184:	fc 01       	movw	r30, r24
 186:	80 81       	ld	r24, Z
 188:	91 81       	ldd	r25, Z+1	; 0x01
 18a:	cc 01       	movw	r24, r24
 18c:	a0 e0       	ldi	r26, 0x00	; 0
 18e:	b0 e0       	ldi	r27, 0x00	; 0
 190:	2a 81       	ldd	r18, Y+2	; 0x02
 192:	3b 81       	ldd	r19, Y+3	; 0x03
 194:	4c 81       	ldd	r20, Y+4	; 0x04
 196:	5d 81       	ldd	r21, Y+5	; 0x05
 198:	82 0f       	add	r24, r18
 19a:	93 1f       	adc	r25, r19
 19c:	a4 1f       	adc	r26, r20
 19e:	b5 1f       	adc	r27, r21
 1a0:	8a 83       	std	Y+2, r24	; 0x02
 1a2:	9b 83       	std	Y+3, r25	; 0x03
 1a4:	ac 83       	std	Y+4, r26	; 0x04
 1a6:	bd 83       	std	Y+5, r27	; 0x05
	for(cnt = 1;cnt<=15;cnt++)
	{
		samples[cnt - 1] = samples[cnt];
	};
	samples[15] = del;
	for(cnt = 15;cnt>=0;cnt--)
 1a8:	89 81       	ldd	r24, Y+1	; 0x01
 1aa:	81 50       	subi	r24, 0x01	; 1
 1ac:	89 83       	std	Y+1, r24	; 0x01
 1ae:	89 81       	ldd	r24, Y+1	; 0x01
 1b0:	88 23       	and	r24, r24
 1b2:	04 f7       	brge	.-64     	; 0x174 <filter+0x6c>
	{
		sum = sum + samples[cnt];
	};
del = sum/16;
 1b4:	8a 81       	ldd	r24, Y+2	; 0x02
 1b6:	9b 81       	ldd	r25, Y+3	; 0x03
 1b8:	ac 81       	ldd	r26, Y+4	; 0x04
 1ba:	bd 81       	ldd	r27, Y+5	; 0x05
 1bc:	68 94       	set
 1be:	13 f8       	bld	r1, 3
 1c0:	b6 95       	lsr	r27
 1c2:	a7 95       	ror	r26
 1c4:	97 95       	ror	r25
 1c6:	87 95       	ror	r24
 1c8:	16 94       	lsr	r1
 1ca:	d1 f7       	brne	.-12     	; 0x1c0 <filter+0xb8>
 1cc:	9f 83       	std	Y+7, r25	; 0x07
 1ce:	8e 83       	std	Y+6, r24	; 0x06
return del;
 1d0:	8e 81       	ldd	r24, Y+6	; 0x06
 1d2:	9f 81       	ldd	r25, Y+7	; 0x07
};
 1d4:	c9 5f       	subi	r28, 0xF9	; 249
 1d6:	cd bf       	out	0x3d, r28	; 61
 1d8:	cf 91       	pop	r28
 1da:	df 91       	pop	r29
 1dc:	08 95       	ret

000001de <retuning>:
//****************************************************************************************
//Функция настроек контроллера
//****************************************************************************************
static void retuning (void)	 			
{ 
 1de:	df 93       	push	r29
 1e0:	cf 93       	push	r28
 1e2:	cd b7       	in	r28, 0x3d	; 61
 1e4:	de b7       	in	r29, 0x3e	; 62
// Input/Output Ports initialization
// Port B initialization
// Func5=In Func4=Out Func3=Out Func2=In Func1=In Func0=In 
// State5=T State4=0 State3=0 State2=P State1=T State0=P 
PORTB=0x05;
 1e6:	88 e3       	ldi	r24, 0x38	; 56
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	25 e0       	ldi	r18, 0x05	; 5
 1ec:	fc 01       	movw	r30, r24
 1ee:	20 83       	st	Z, r18
DDRB=0x18;//PB0,PB1,PB2 as input//PB5 as An input//PB3,PB4 as output
 1f0:	87 e3       	ldi	r24, 0x37	; 55
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	28 e1       	ldi	r18, 0x18	; 24
 1f6:	fc 01       	movw	r30, r24
 1f8:	20 83       	st	Z, r18
// Clock source: System Clock
// Clock value: Timer 0 Stopped
// Mode: Normal top=0xFF
// OC0A output: Disconnected
// OC0B output: Disconnected
TCCR0A=0x00;
 1fa:	8a e4       	ldi	r24, 0x4A	; 74
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	fc 01       	movw	r30, r24
 200:	10 82       	st	Z, r1
TCCR0B=0x00;
 202:	83 e5       	ldi	r24, 0x53	; 83
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	fc 01       	movw	r30, r24
 208:	10 82       	st	Z, r1
TCNT0=0x00;
 20a:	82 e5       	ldi	r24, 0x52	; 82
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	fc 01       	movw	r30, r24
 210:	10 82       	st	Z, r1
OCR0A=0x00;
 212:	89 e4       	ldi	r24, 0x49	; 73
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	fc 01       	movw	r30, r24
 218:	10 82       	st	Z, r1
OCR0B=0x00;
 21a:	88 e4       	ldi	r24, 0x48	; 72
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	fc 01       	movw	r30, r24
 220:	10 82       	st	Z, r1
// OC1A output: Disconnected
// OC1B output: Disconnected
// Timer1 Overflow Interrupt: Off
// Compare A Match Interrupt: Off
// Compare B Match Interrupt: Off
PLLCSR=0x00;
 222:	87 e4       	ldi	r24, 0x47	; 71
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	fc 01       	movw	r30, r24
 228:	10 82       	st	Z, r1

TCCR1=0x00;
 22a:	80 e5       	ldi	r24, 0x50	; 80
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	fc 01       	movw	r30, r24
 230:	10 82       	st	Z, r1
GTCCR=0x00;
 232:	8c e4       	ldi	r24, 0x4C	; 76
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	fc 01       	movw	r30, r24
 238:	10 82       	st	Z, r1
TCNT1=0x00;
 23a:	8f e4       	ldi	r24, 0x4F	; 79
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	fc 01       	movw	r30, r24
 240:	10 82       	st	Z, r1
OCR1A=0x00;
 242:	8e e4       	ldi	r24, 0x4E	; 78
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	fc 01       	movw	r30, r24
 248:	10 82       	st	Z, r1
OCR1B=0x00;
 24a:	8b e4       	ldi	r24, 0x4B	; 75
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	fc 01       	movw	r30, r24
 250:	10 82       	st	Z, r1
OCR1C=0x00;
 252:	8d e4       	ldi	r24, 0x4D	; 77
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	fc 01       	movw	r30, r24
 258:	10 82       	st	Z, r1

// External Interrupt(s) initialization
// INT0: Off
// Interrupt on any change on pins PCINT0-5: Off
GIMSK=0x00;
 25a:	8b e5       	ldi	r24, 0x5B	; 91
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	fc 01       	movw	r30, r24
 260:	10 82       	st	Z, r1
MCUCR=0x00;
 262:	85 e5       	ldi	r24, 0x55	; 85
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	fc 01       	movw	r30, r24
 268:	10 82       	st	Z, r1

// Timer(s)/Counter(s) Interrupt(s) initialization
TIMSK=0x00;
 26a:	89 e5       	ldi	r24, 0x59	; 89
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	fc 01       	movw	r30, r24
 270:	10 82       	st	Z, r1

// Universal Serial Interface initialization
// Mode: Disabled
// Clock source: Register & Counter=no clk.
// USI Counter Overflow Interrupt: Off
USICR=0x00;
 272:	8d e2       	ldi	r24, 0x2D	; 45
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	fc 01       	movw	r30, r24
 278:	10 82       	st	Z, r1

// Analog Comparator initialization
// Analog Comparator: Off
ACSR=0x80;
 27a:	88 e2       	ldi	r24, 0x28	; 40
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	20 e8       	ldi	r18, 0x80	; 128
 280:	fc 01       	movw	r30, r24
 282:	20 83       	st	Z, r18
ADCSRB=0x00;
 284:	83 e2       	ldi	r24, 0x23	; 35
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	fc 01       	movw	r30, r24
 28a:	10 82       	st	Z, r1
DIDR0=0x00;
 28c:	84 e3       	ldi	r24, 0x34	; 52
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	fc 01       	movw	r30, r24
 292:	10 82       	st	Z, r1
// ADC Voltage Reference: 2.56V, AREF discon.
// ADC Bipolar Input Mode: Off
// ADC Reverse Input Polarity: Off
// ADC Auto Trigger Source: ADC Stopped
// Digital input buffers on ADC0: Off, ADC1: On, ADC2: On, ADC3: On
DIDR0&=0x03;
 294:	84 e3       	ldi	r24, 0x34	; 52
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	24 e3       	ldi	r18, 0x34	; 52
 29a:	30 e0       	ldi	r19, 0x00	; 0
 29c:	f9 01       	movw	r30, r18
 29e:	20 81       	ld	r18, Z
 2a0:	23 70       	andi	r18, 0x03	; 3
 2a2:	fc 01       	movw	r30, r24
 2a4:	20 83       	st	Z, r18
DIDR0|=0x20;
 2a6:	84 e3       	ldi	r24, 0x34	; 52
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	24 e3       	ldi	r18, 0x34	; 52
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	f9 01       	movw	r30, r18
 2b0:	20 81       	ld	r18, Z
 2b2:	20 62       	ori	r18, 0x20	; 32
 2b4:	fc 01       	movw	r30, r24
 2b6:	20 83       	st	Z, r18
ADMUX=ADC_VREF_TYPE & 0xff;
 2b8:	87 e2       	ldi	r24, 0x27	; 39
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	20 e9       	ldi	r18, 0x90	; 144
 2be:	fc 01       	movw	r30, r24
 2c0:	20 83       	st	Z, r18
ADCSRA=0x81;
 2c2:	86 e2       	ldi	r24, 0x26	; 38
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	21 e8       	ldi	r18, 0x81	; 129
 2c8:	fc 01       	movw	r30, r24
 2ca:	20 83       	st	Z, r18
ADCSRB&=0x5F;
 2cc:	83 e2       	ldi	r24, 0x23	; 35
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	23 e2       	ldi	r18, 0x23	; 35
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	f9 01       	movw	r30, r18
 2d6:	20 81       	ld	r18, Z
 2d8:	2f 75       	andi	r18, 0x5F	; 95
 2da:	fc 01       	movw	r30, r24
 2dc:	20 83       	st	Z, r18


GIMSK=(1<<INT0);
 2de:	8b e5       	ldi	r24, 0x5B	; 91
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	20 e4       	ldi	r18, 0x40	; 64
 2e4:	fc 01       	movw	r30, r24
 2e6:	20 83       	st	Z, r18
MCUCR=(0<<ISC00)|(1<<ISC01);											//Interrupt on falling edge on PB2
 2e8:	85 e5       	ldi	r24, 0x55	; 85
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	22 e0       	ldi	r18, 0x02	; 2
 2ee:	fc 01       	movw	r30, r24
 2f0:	20 83       	st	Z, r18

	pause(4000);														//Settle pause 1000мc
 2f2:	60 ea       	ldi	r22, 0xA0	; 160
 2f4:	7f e0       	ldi	r23, 0x0F	; 15
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	ab de       	rcall	.-682    	; 0x52 <pause>
	sei();																//Interrupt enable
 2fc:	78 94       	sei
};
 2fe:	cf 91       	pop	r28
 300:	df 91       	pop	r29
 302:	08 95       	ret

00000304 <pause_10m>:
//****************************************************************************************
//Функция измерения напряжения
//****************************************************************************************
static void pause_10m (void)
{
 304:	df 93       	push	r29
 306:	cf 93       	push	r28
 308:	0f 92       	push	r0
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62
	unsigned char i = 0;
 30e:	19 82       	std	Y+1, r1	; 0x01
	for (i = 35;((i > 0) & (V_BORT == 0));i--)
 310:	83 e2       	ldi	r24, 0x23	; 35
 312:	89 83       	std	Y+1, r24	; 0x01
 314:	08 c0       	rjmp	.+16     	; 0x326 <pause_10m+0x22>
	{
		pause(65534);
 316:	6e ef       	ldi	r22, 0xFE	; 254
 318:	7f ef       	ldi	r23, 0xFF	; 255
 31a:	80 e0       	ldi	r24, 0x00	; 0
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	99 de       	rcall	.-718    	; 0x52 <pause>
//Функция измерения напряжения
//****************************************************************************************
static void pause_10m (void)
{
	unsigned char i = 0;
	for (i = 35;((i > 0) & (V_BORT == 0));i--)
 320:	89 81       	ldd	r24, Y+1	; 0x01
 322:	81 50       	subi	r24, 0x01	; 1
 324:	89 83       	std	Y+1, r24	; 0x01
 326:	31 e0       	ldi	r19, 0x01	; 1
 328:	89 81       	ldd	r24, Y+1	; 0x01
 32a:	88 23       	and	r24, r24
 32c:	09 f4       	brne	.+2      	; 0x330 <pause_10m+0x2c>
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	86 e3       	ldi	r24, 0x36	; 54
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	fc 01       	movw	r30, r24
 336:	80 81       	ld	r24, Z
 338:	86 95       	lsr	r24
 33a:	88 2f       	mov	r24, r24
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	81 70       	andi	r24, 0x01	; 1
 340:	90 70       	andi	r25, 0x00	; 0
 342:	21 e0       	ldi	r18, 0x01	; 1
 344:	00 97       	sbiw	r24, 0x00	; 0
 346:	09 f0       	breq	.+2      	; 0x34a <pause_10m+0x46>
 348:	20 e0       	ldi	r18, 0x00	; 0
 34a:	83 2f       	mov	r24, r19
 34c:	82 23       	and	r24, r18
 34e:	88 23       	and	r24, r24
 350:	11 f7       	brne	.-60     	; 0x316 <pause_10m+0x12>
	{
		pause(65534);
	};
};
 352:	0f 90       	pop	r0
 354:	cf 91       	pop	r28
 356:	df 91       	pop	r29
 358:	08 95       	ret

0000035a <pause_10m_mon>:
//****************************************************************************************
//Функция зазадержек + мониторинг напряжений
//****************************************************************************************
static unsigned int pause_10m_mon (void)
{
 35a:	df 93       	push	r29
 35c:	cf 93       	push	r28
 35e:	cd b7       	in	r28, 0x3d	; 61
 360:	de b7       	in	r29, 0x3e	; 62
 362:	c3 50       	subi	r28, 0x03	; 3
 364:	cd bf       	out	0x3d, r28	; 61
	unsigned char i = 0;
 366:	19 82       	std	Y+1, r1	; 0x01
	unsigned int u = 0;
 368:	1b 82       	std	Y+3, r1	; 0x03
 36a:	1a 82       	std	Y+2, r1	; 0x02
	for (i = 33;(i > 0) & (V_BORT == 0);i--)							// 10мин задержка
 36c:	81 e2       	ldi	r24, 0x21	; 33
 36e:	89 83       	std	Y+1, r24	; 0x01
 370:	11 c0       	rjmp	.+34     	; 0x394 <pause_10m_mon+0x3a>
	{
		pause(65534);
 372:	6e ef       	ldi	r22, 0xFE	; 254
 374:	7f ef       	ldi	r23, 0xFF	; 255
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	6b de       	rcall	.-810    	; 0x52 <pause>
		u = read_adc(0);												// Меряем
 37c:	80 e0       	ldi	r24, 0x00	; 0
 37e:	8c de       	rcall	.-744    	; 0x98 <read_adc>
 380:	9b 83       	std	Y+3, r25	; 0x03
 382:	8a 83       	std	Y+2, r24	; 0x02
		u = filter (u);													// Фильтруем
 384:	8a 81       	ldd	r24, Y+2	; 0x02
 386:	9b 81       	ldd	r25, Y+3	; 0x03
 388:	bf de       	rcall	.-642    	; 0x108 <filter>
 38a:	9b 83       	std	Y+3, r25	; 0x03
 38c:	8a 83       	std	Y+2, r24	; 0x02
//****************************************************************************************
static unsigned int pause_10m_mon (void)
{
	unsigned char i = 0;
	unsigned int u = 0;
	for (i = 33;(i > 0) & (V_BORT == 0);i--)							// 10мин задержка
 38e:	89 81       	ldd	r24, Y+1	; 0x01
 390:	81 50       	subi	r24, 0x01	; 1
 392:	89 83       	std	Y+1, r24	; 0x01
 394:	31 e0       	ldi	r19, 0x01	; 1
 396:	89 81       	ldd	r24, Y+1	; 0x01
 398:	88 23       	and	r24, r24
 39a:	09 f4       	brne	.+2      	; 0x39e <pause_10m_mon+0x44>
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	86 e3       	ldi	r24, 0x36	; 54
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	fc 01       	movw	r30, r24
 3a4:	80 81       	ld	r24, Z
 3a6:	86 95       	lsr	r24
 3a8:	88 2f       	mov	r24, r24
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	81 70       	andi	r24, 0x01	; 1
 3ae:	90 70       	andi	r25, 0x00	; 0
 3b0:	21 e0       	ldi	r18, 0x01	; 1
 3b2:	00 97       	sbiw	r24, 0x00	; 0
 3b4:	09 f0       	breq	.+2      	; 0x3b8 <pause_10m_mon+0x5e>
 3b6:	20 e0       	ldi	r18, 0x00	; 0
 3b8:	83 2f       	mov	r24, r19
 3ba:	82 23       	and	r24, r18
 3bc:	88 23       	and	r24, r24
 3be:	c9 f6       	brne	.-78     	; 0x372 <pause_10m_mon+0x18>
		pause(65534);
		u = read_adc(0);												// Меряем
		u = filter (u);													// Фильтруем
	};
	//---------------------------------------------------------------------------------------
	if (u < 864)
 3c0:	8a 81       	ldd	r24, Y+2	; 0x02
 3c2:	9b 81       	ldd	r25, Y+3	; 0x03
 3c4:	f3 e0       	ldi	r31, 0x03	; 3
 3c6:	80 36       	cpi	r24, 0x60	; 96
 3c8:	9f 07       	cpc	r25, r31
 3ca:	48 f5       	brcc	.+82     	; 0x41e <pause_10m_mon+0xc4>
	{
		//---------------------------------------------------------------------------------------
		if (MAIN_L_ON == 1)
 3cc:	88 e3       	ldi	r24, 0x38	; 56
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	fc 01       	movw	r30, r24
 3d2:	80 81       	ld	r24, Z
 3d4:	82 95       	swap	r24
 3d6:	8f 70       	andi	r24, 0x0F	; 15
 3d8:	88 2f       	mov	r24, r24
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	81 70       	andi	r24, 0x01	; 1
 3de:	90 70       	andi	r25, 0x00	; 0
 3e0:	88 23       	and	r24, r24
 3e2:	99 f0       	breq	.+38     	; 0x40a <pause_10m_mon+0xb0>
		{
			MAIN_REL_OFF;												// Всё плохо
 3e4:	88 e3       	ldi	r24, 0x38	; 56
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	28 e3       	ldi	r18, 0x38	; 56
 3ea:	30 e0       	ldi	r19, 0x00	; 0
 3ec:	f9 01       	movw	r30, r18
 3ee:	20 81       	ld	r18, Z
 3f0:	2f 7e       	andi	r18, 0xEF	; 239
 3f2:	fc 01       	movw	r30, r24
 3f4:	20 83       	st	Z, r18
			PWR_V_OFF;													// Вырубаем всё
 3f6:	88 e3       	ldi	r24, 0x38	; 56
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	28 e3       	ldi	r18, 0x38	; 56
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	f9 01       	movw	r30, r18
 400:	20 81       	ld	r18, Z
 402:	27 7f       	andi	r18, 0xF7	; 247
 404:	fc 01       	movw	r30, r24
 406:	20 83       	st	Z, r18
 408:	29 c0       	rjmp	.+82     	; 0x45c <pause_10m_mon+0x102>
		}
		else
		{
			MAIN_REL_ON;												// Не всё плохо заряжаемся
 40a:	88 e3       	ldi	r24, 0x38	; 56
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	28 e3       	ldi	r18, 0x38	; 56
 410:	30 e0       	ldi	r19, 0x00	; 0
 412:	f9 01       	movw	r30, r18
 414:	20 81       	ld	r18, Z
 416:	20 61       	ori	r18, 0x10	; 16
 418:	fc 01       	movw	r30, r24
 41a:	20 83       	st	Z, r18
 41c:	1f c0       	rjmp	.+62     	; 0x45c <pause_10m_mon+0x102>
		};
		//---------------------------------------------------------------------------------------													
	}
	else if (u < 900)
 41e:	8a 81       	ldd	r24, Y+2	; 0x02
 420:	9b 81       	ldd	r25, Y+3	; 0x03
 422:	f3 e0       	ldi	r31, 0x03	; 3
 424:	84 38       	cpi	r24, 0x84	; 132
 426:	9f 07       	cpc	r25, r31
 428:	50 f4       	brcc	.+20     	; 0x43e <pause_10m_mon+0xe4>
	{
		MAIN_REL_ON;													// Заряжаемся
 42a:	88 e3       	ldi	r24, 0x38	; 56
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	28 e3       	ldi	r18, 0x38	; 56
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	f9 01       	movw	r30, r18
 434:	20 81       	ld	r18, Z
 436:	20 61       	ori	r18, 0x10	; 16
 438:	fc 01       	movw	r30, r24
 43a:	20 83       	st	Z, r18
 43c:	0f c0       	rjmp	.+30     	; 0x45c <pause_10m_mon+0x102>
	}
	else if (u > 900)
 43e:	8a 81       	ldd	r24, Y+2	; 0x02
 440:	9b 81       	ldd	r25, Y+3	; 0x03
 442:	f3 e0       	ldi	r31, 0x03	; 3
 444:	85 38       	cpi	r24, 0x85	; 133
 446:	9f 07       	cpc	r25, r31
 448:	48 f0       	brcs	.+18     	; 0x45c <pause_10m_mon+0x102>
	{
		MAIN_REL_OFF;													// Не заряжаемся
 44a:	88 e3       	ldi	r24, 0x38	; 56
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	28 e3       	ldi	r18, 0x38	; 56
 450:	30 e0       	ldi	r19, 0x00	; 0
 452:	f9 01       	movw	r30, r18
 454:	20 81       	ld	r18, Z
 456:	2f 7e       	andi	r18, 0xEF	; 239
 458:	fc 01       	movw	r30, r24
 45a:	20 83       	st	Z, r18
	};
	//---------------------------------------------------------------------------------------
	return u;
 45c:	8a 81       	ldd	r24, Y+2	; 0x02
 45e:	9b 81       	ldd	r25, Y+3	; 0x03
};
 460:	cd 5f       	subi	r28, 0xFD	; 253
 462:	cd bf       	out	0x3d, r28	; 61
 464:	cf 91       	pop	r28
 466:	df 91       	pop	r29
 468:	08 95       	ret

0000046a <set_mode>:
//****************************************************************************************
//Функция переключений режимов
//****************************************************************************************
static void set_mode(unsigned char mod)
{
 46a:	df 93       	push	r29
 46c:	cf 93       	push	r28
 46e:	0f 92       	push	r0
 470:	cd b7       	in	r28, 0x3d	; 61
 472:	de b7       	in	r29, 0x3e	; 62
 474:	89 83       	std	Y+1, r24	; 0x01
	switch(mod)
 476:	89 81       	ldd	r24, Y+1	; 0x01
 478:	88 2f       	mov	r24, r24
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	00 97       	sbiw	r24, 0x00	; 0
 47e:	21 f0       	breq	.+8      	; 0x488 <set_mode+0x1e>
 480:	81 30       	cpi	r24, 0x01	; 1
 482:	91 05       	cpc	r25, r1
 484:	a1 f0       	breq	.+40     	; 0x4ae <set_mode+0x44>
 486:	1d c0       	rjmp	.+58     	; 0x4c2 <set_mode+0x58>
	{
		case 0:
		{
					MAIN_REL_ON;
 488:	88 e3       	ldi	r24, 0x38	; 56
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	28 e3       	ldi	r18, 0x38	; 56
 48e:	30 e0       	ldi	r19, 0x00	; 0
 490:	f9 01       	movw	r30, r18
 492:	20 81       	ld	r18, Z
 494:	20 61       	ori	r18, 0x10	; 16
 496:	fc 01       	movw	r30, r24
 498:	20 83       	st	Z, r18
					PWR_V_ON;
 49a:	88 e3       	ldi	r24, 0x38	; 56
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	28 e3       	ldi	r18, 0x38	; 56
 4a0:	30 e0       	ldi	r19, 0x00	; 0
 4a2:	f9 01       	movw	r30, r18
 4a4:	20 81       	ld	r18, Z
 4a6:	28 60       	ori	r18, 0x08	; 8
 4a8:	fc 01       	movw	r30, r24
 4aa:	20 83       	st	Z, r18
		};break;
 4ac:	0a c0       	rjmp	.+20     	; 0x4c2 <set_mode+0x58>
		case 1:
		{
					MAIN_REL_OFF;
 4ae:	88 e3       	ldi	r24, 0x38	; 56
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	28 e3       	ldi	r18, 0x38	; 56
 4b4:	30 e0       	ldi	r19, 0x00	; 0
 4b6:	f9 01       	movw	r30, r18
 4b8:	20 81       	ld	r18, Z
 4ba:	2f 7e       	andi	r18, 0xEF	; 239
 4bc:	fc 01       	movw	r30, r24
 4be:	20 83       	st	Z, r18
		};break;
 4c0:	00 00       	nop
	};
	pause(1000);					//250мc
 4c2:	68 ee       	ldi	r22, 0xE8	; 232
 4c4:	73 e0       	ldi	r23, 0x03	; 3
 4c6:	80 e0       	ldi	r24, 0x00	; 0
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	c3 dd       	rcall	.-1146   	; 0x52 <pause>
};
 4cc:	0f 90       	pop	r0
 4ce:	cf 91       	pop	r28
 4d0:	df 91       	pop	r29
 4d2:	08 95       	ret

000004d4 <__vector_4>:

//****************************************************************************************
//Преривание TIM1 переполнения
//****************************************************************************************
ISR (TIM1_OVF_vect)
{ 
 4d4:	1f 92       	push	r1
 4d6:	0f 92       	push	r0
 4d8:	0f b6       	in	r0, 0x3f	; 63
 4da:	0f 92       	push	r0
 4dc:	11 24       	eor	r1, r1
 4de:	df 93       	push	r29
 4e0:	cf 93       	push	r28
 4e2:	cd b7       	in	r28, 0x3d	; 61
 4e4:	de b7       	in	r29, 0x3e	; 62

	return;
};
 4e6:	cf 91       	pop	r28
 4e8:	df 91       	pop	r29
 4ea:	0f 90       	pop	r0
 4ec:	0f be       	out	0x3f, r0	; 63
 4ee:	0f 90       	pop	r0
 4f0:	1f 90       	pop	r1
 4f2:	18 95       	reti

000004f4 <__vector_8>:
//****************************************************************************************
//Преривание ADC
//****************************************************************************************
ISR (ADC_vect)
{ 
 4f4:	1f 92       	push	r1
 4f6:	0f 92       	push	r0
 4f8:	0f b6       	in	r0, 0x3f	; 63
 4fa:	0f 92       	push	r0
 4fc:	11 24       	eor	r1, r1
 4fe:	8f 93       	push	r24
 500:	9f 93       	push	r25
 502:	ef 93       	push	r30
 504:	ff 93       	push	r31
 506:	df 93       	push	r29
 508:	cf 93       	push	r28
 50a:	cd b7       	in	r28, 0x3d	; 61
 50c:	de b7       	in	r29, 0x3e	; 62
ADMUX=0x00;//ADMUX=ADC_VREF_TYPE & 0xff;
 50e:	87 e2       	ldi	r24, 0x27	; 39
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	fc 01       	movw	r30, r24
 514:	10 82       	st	Z, r1
	else
	{
		
	}*/
	return;
};
 516:	cf 91       	pop	r28
 518:	df 91       	pop	r29
 51a:	ff 91       	pop	r31
 51c:	ef 91       	pop	r30
 51e:	9f 91       	pop	r25
 520:	8f 91       	pop	r24
 522:	0f 90       	pop	r0
 524:	0f be       	out	0x3f, r0	; 63
 526:	0f 90       	pop	r0
 528:	1f 90       	pop	r1
 52a:	18 95       	reti

0000052c <__vector_1>:
//****************************************************************************************
//Преривание нажатие кнопки
//****************************************************************************************
ISR (INT0_vect)
{
 52c:	1f 92       	push	r1
 52e:	0f 92       	push	r0
 530:	0f b6       	in	r0, 0x3f	; 63
 532:	0f 92       	push	r0
 534:	11 24       	eor	r1, r1
 536:	2f 93       	push	r18
 538:	3f 93       	push	r19
 53a:	4f 93       	push	r20
 53c:	5f 93       	push	r21
 53e:	6f 93       	push	r22
 540:	7f 93       	push	r23
 542:	8f 93       	push	r24
 544:	9f 93       	push	r25
 546:	af 93       	push	r26
 548:	bf 93       	push	r27
 54a:	ef 93       	push	r30
 54c:	ff 93       	push	r31
 54e:	df 93       	push	r29
 550:	cf 93       	push	r28
 552:	cd b7       	in	r28, 0x3d	; 61
 554:	de b7       	in	r29, 0x3e	; 62
	pause(100);
 556:	64 e6       	ldi	r22, 0x64	; 100
 558:	70 e0       	ldi	r23, 0x00	; 0
 55a:	80 e0       	ldi	r24, 0x00	; 0
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	79 dd       	rcall	.-1294   	; 0x52 <pause>
	//---------------------------------------------------------------------------------------															//Settle pause 25мc
	if (BUTTON == 0)
 560:	86 e3       	ldi	r24, 0x36	; 54
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	fc 01       	movw	r30, r24
 566:	80 81       	ld	r24, Z
 568:	86 95       	lsr	r24
 56a:	86 95       	lsr	r24
 56c:	88 2f       	mov	r24, r24
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	81 70       	andi	r24, 0x01	; 1
 572:	90 70       	andi	r25, 0x00	; 0
 574:	00 97       	sbiw	r24, 0x00	; 0
 576:	39 f5       	brne	.+78     	; 0x5c6 <__vector_1+0x9a>
	{
		if (PWR_L_ON == 1)
 578:	88 e3       	ldi	r24, 0x38	; 56
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	fc 01       	movw	r30, r24
 57e:	80 81       	ld	r24, Z
 580:	86 95       	lsr	r24
 582:	86 95       	lsr	r24
 584:	86 95       	lsr	r24
 586:	88 2f       	mov	r24, r24
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	81 70       	andi	r24, 0x01	; 1
 58c:	90 70       	andi	r25, 0x00	; 0
 58e:	88 23       	and	r24, r24
 590:	51 f0       	breq	.+20     	; 0x5a6 <__vector_1+0x7a>
		{
			PWR_V_OFF;													// При выключеном двигателе вырубается всё
 592:	88 e3       	ldi	r24, 0x38	; 56
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	28 e3       	ldi	r18, 0x38	; 56
 598:	30 e0       	ldi	r19, 0x00	; 0
 59a:	f9 01       	movw	r30, r18
 59c:	20 81       	ld	r18, Z
 59e:	27 7f       	andi	r18, 0xF7	; 247
 5a0:	fc 01       	movw	r30, r24
 5a2:	20 83       	st	Z, r18
		{
			PWR_V_ON;
		};
	};
	//---------------------------------------------------------------------------------------
	while(BUTTON == 0){pause(10);};
 5a4:	11 c0       	rjmp	.+34     	; 0x5c8 <__vector_1+0x9c>
		{
			PWR_V_OFF;													// При выключеном двигателе вырубается всё
		}
		else
		{
			PWR_V_ON;
 5a6:	88 e3       	ldi	r24, 0x38	; 56
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	28 e3       	ldi	r18, 0x38	; 56
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	f9 01       	movw	r30, r18
 5b0:	20 81       	ld	r18, Z
 5b2:	28 60       	ori	r18, 0x08	; 8
 5b4:	fc 01       	movw	r30, r24
 5b6:	20 83       	st	Z, r18
		};
	};
	//---------------------------------------------------------------------------------------
	while(BUTTON == 0){pause(10);};
 5b8:	07 c0       	rjmp	.+14     	; 0x5c8 <__vector_1+0x9c>
 5ba:	6a e0       	ldi	r22, 0x0A	; 10
 5bc:	70 e0       	ldi	r23, 0x00	; 0
 5be:	80 e0       	ldi	r24, 0x00	; 0
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	47 dd       	rcall	.-1394   	; 0x52 <pause>
 5c4:	01 c0       	rjmp	.+2      	; 0x5c8 <__vector_1+0x9c>
 5c6:	00 00       	nop
 5c8:	86 e3       	ldi	r24, 0x36	; 54
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	fc 01       	movw	r30, r24
 5ce:	80 81       	ld	r24, Z
 5d0:	86 95       	lsr	r24
 5d2:	86 95       	lsr	r24
 5d4:	88 2f       	mov	r24, r24
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	81 70       	andi	r24, 0x01	; 1
 5da:	90 70       	andi	r25, 0x00	; 0
 5dc:	00 97       	sbiw	r24, 0x00	; 0
 5de:	69 f3       	breq	.-38     	; 0x5ba <__vector_1+0x8e>
	return;
};
 5e0:	cf 91       	pop	r28
 5e2:	df 91       	pop	r29
 5e4:	ff 91       	pop	r31
 5e6:	ef 91       	pop	r30
 5e8:	bf 91       	pop	r27
 5ea:	af 91       	pop	r26
 5ec:	9f 91       	pop	r25
 5ee:	8f 91       	pop	r24
 5f0:	7f 91       	pop	r23
 5f2:	6f 91       	pop	r22
 5f4:	5f 91       	pop	r21
 5f6:	4f 91       	pop	r20
 5f8:	3f 91       	pop	r19
 5fa:	2f 91       	pop	r18
 5fc:	0f 90       	pop	r0
 5fe:	0f be       	out	0x3f, r0	; 63
 600:	0f 90       	pop	r0
 602:	1f 90       	pop	r1
 604:	18 95       	reti

00000606 <main>:
//****************************************************************************************
//Главная программа
//****************************************************************************************
int main(void)
{
 606:	df 93       	push	r29
 608:	cf 93       	push	r28
 60a:	cd b7       	in	r28, 0x3d	; 61
 60c:	de b7       	in	r29, 0x3e	; 62
	static unsigned int t = 0;
	//---------------------------------------------------------------------------------------
	retuning ();
 60e:	e7 dd       	rcall	.-1074   	; 0x1de <retuning>
	//---------------------------------------------------------------------------------------
    while(1)
    {
		if (V_BORT == 0)
 610:	86 e3       	ldi	r24, 0x36	; 54
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	fc 01       	movw	r30, r24
 616:	80 81       	ld	r24, Z
 618:	86 95       	lsr	r24
 61a:	88 2f       	mov	r24, r24
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	81 70       	andi	r24, 0x01	; 1
 620:	90 70       	andi	r25, 0x00	; 0
 622:	00 97       	sbiw	r24, 0x00	; 0
 624:	09 f0       	breq	.+2      	; 0x628 <main+0x22>
 626:	4e c0       	rjmp	.+156    	; 0x6c4 <main+0xbe>
		{
			set_mode(1);
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	1f df       	rcall	.-450    	; 0x46a <set_mode>
			while(V_BORT == 0)
 62c:	3e c0       	rjmp	.+124    	; 0x6aa <main+0xa4>
			{
				pause_10m_mon();										// 10мин задержка + монитор
 62e:	95 de       	rcall	.-726    	; 0x35a <pause_10m_mon>
	//---------------------------------------------------------------------------------------
				if (PARK == 0)
 630:	86 e3       	ldi	r24, 0x36	; 54
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	fc 01       	movw	r30, r24
 636:	80 81       	ld	r24, Z
 638:	88 2f       	mov	r24, r24
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	81 70       	andi	r24, 0x01	; 1
 63e:	90 70       	andi	r25, 0x00	; 0
 640:	00 97       	sbiw	r24, 0x00	; 0
 642:	51 f4       	brne	.+20     	; 0x658 <main+0x52>
				{
					t = t + 10;											// 300мин пишем
 644:	80 91 80 00 	lds	r24, 0x0080
 648:	90 91 81 00 	lds	r25, 0x0081
 64c:	0a 96       	adiw	r24, 0x0a	; 10
 64e:	90 93 81 00 	sts	0x0081, r25
 652:	80 93 80 00 	sts	0x0080, r24
 656:	09 c0       	rjmp	.+18     	; 0x66a <main+0x64>
				}
				else
				{
					t++;												// 3000мин пишем
 658:	80 91 80 00 	lds	r24, 0x0080
 65c:	90 91 81 00 	lds	r25, 0x0081
 660:	01 96       	adiw	r24, 0x01	; 1
 662:	90 93 81 00 	sts	0x0081, r25
 666:	80 93 80 00 	sts	0x0080, r24
				};
	//---------------------------------------------------------------------------------------
				if (t < 300)											// 300мин/3000мин пишем
 66a:	80 91 80 00 	lds	r24, 0x0080
 66e:	90 91 81 00 	lds	r25, 0x0081
 672:	f1 e0       	ldi	r31, 0x01	; 1
 674:	8c 32       	cpi	r24, 0x2C	; 44
 676:	9f 07       	cpc	r25, r31
 678:	30 f4       	brcc	.+12     	; 0x686 <main+0x80>
				{
					pause(10);											//Settle pause
 67a:	6a e0       	ldi	r22, 0x0A	; 10
 67c:	70 e0       	ldi	r23, 0x00	; 0
 67e:	80 e0       	ldi	r24, 0x00	; 0
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	e7 dc       	rcall	.-1586   	; 0x52 <pause>
 684:	12 c0       	rjmp	.+36     	; 0x6aa <main+0xa4>
				}
				else
				{
					MAIN_REL_OFF;
 686:	88 e3       	ldi	r24, 0x38	; 56
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	28 e3       	ldi	r18, 0x38	; 56
 68c:	30 e0       	ldi	r19, 0x00	; 0
 68e:	f9 01       	movw	r30, r18
 690:	20 81       	ld	r18, Z
 692:	2f 7e       	andi	r18, 0xEF	; 239
 694:	fc 01       	movw	r30, r24
 696:	20 83       	st	Z, r18
					PWR_V_OFF;											//Вырубаем всё
 698:	88 e3       	ldi	r24, 0x38	; 56
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	28 e3       	ldi	r18, 0x38	; 56
 69e:	30 e0       	ldi	r19, 0x00	; 0
 6a0:	f9 01       	movw	r30, r18
 6a2:	20 81       	ld	r18, Z
 6a4:	27 7f       	andi	r18, 0xF7	; 247
 6a6:	fc 01       	movw	r30, r24
 6a8:	20 83       	st	Z, r18
    while(1)
    {
		if (V_BORT == 0)
		{
			set_mode(1);
			while(V_BORT == 0)
 6aa:	86 e3       	ldi	r24, 0x36	; 54
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	fc 01       	movw	r30, r24
 6b0:	80 81       	ld	r24, Z
 6b2:	86 95       	lsr	r24
 6b4:	88 2f       	mov	r24, r24
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	81 70       	andi	r24, 0x01	; 1
 6ba:	90 70       	andi	r25, 0x00	; 0
 6bc:	00 97       	sbiw	r24, 0x00	; 0
 6be:	09 f4       	brne	.+2      	; 0x6c2 <main+0xbc>
 6c0:	b6 cf       	rjmp	.-148    	; 0x62e <main+0x28>
 6c2:	18 c0       	rjmp	.+48     	; 0x6f4 <main+0xee>
				};
			};															//while(V_BORT == 0)
		}																//if (V_BORT == 0)
		else
		{
			t = 0;														//
 6c4:	10 92 81 00 	sts	0x0081, r1
 6c8:	10 92 80 00 	sts	0x0080, r1
			set_mode(0);
 6cc:	80 e0       	ldi	r24, 0x00	; 0
 6ce:	cd de       	rcall	.-614    	; 0x46a <set_mode>
			while(V_BORT == 1){pause(10);};								//while(V_BORT == 1)
 6d0:	05 c0       	rjmp	.+10     	; 0x6dc <main+0xd6>
 6d2:	6a e0       	ldi	r22, 0x0A	; 10
 6d4:	70 e0       	ldi	r23, 0x00	; 0
 6d6:	80 e0       	ldi	r24, 0x00	; 0
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	bb dc       	rcall	.-1674   	; 0x52 <pause>
 6dc:	86 e3       	ldi	r24, 0x36	; 54
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	fc 01       	movw	r30, r24
 6e2:	80 81       	ld	r24, Z
 6e4:	86 95       	lsr	r24
 6e6:	88 2f       	mov	r24, r24
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	81 70       	andi	r24, 0x01	; 1
 6ec:	90 70       	andi	r25, 0x00	; 0
 6ee:	88 23       	and	r24, r24
 6f0:	81 f7       	brne	.-32     	; 0x6d2 <main+0xcc>
			pause_10m();												// 10мин задержка
 6f2:	08 de       	rcall	.-1008   	; 0x304 <pause_10m>
		};																//if (V_BORT == 1)
		pause(10);														//Settle pause
 6f4:	6a e0       	ldi	r22, 0x0A	; 10
 6f6:	70 e0       	ldi	r23, 0x00	; 0
 6f8:	80 e0       	ldi	r24, 0x00	; 0
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	aa dc       	rcall	.-1708   	; 0x52 <pause>
    };																	//while(1)
 6fe:	88 cf       	rjmp	.-240    	; 0x610 <main+0xa>

00000700 <_exit>:
 700:	f8 94       	cli

00000702 <__stop_program>:
 702:	ff cf       	rjmp	.-2      	; 0x702 <__stop_program>
